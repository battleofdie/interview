* Questions Set 1 [27/29]
  1. [X] Write a program to accept a nonempty string of alphanumeric characters. Define a “run” as a 
         consecutive sequence of a single character. For example, “aaaa” is a run of length 4. The program will 
         print the longest run in the given string. If there is no single longest run, then you may print any of 
         those runs whose length is at least as long as all other runs in the string. 

         Example input: a 
        
         Example output: a 

         Example input: aab 

         Example output: aa 

         Example input: abbbbbcc 

         Example output: bbbbb 

         Example input: aabbccdd 

         Example output: aa
        
  2. [X] Write a program to accept a nonempty string of 0's and 1's as an argument. The program will print the 
         offsets of runs, each run consisting of all 0's or all 1's, where the runs are longer than 1. For example, if 
         given "0010011" it will print "0, 3, 5" on stdout.
  3. [X] For an N-ary Tree find the nearest common ancestor. 
         
         Given: rootid and a function which finds and returns the immediate parent of a node.
         
         <Answer>If nodes contain parent pointers, use hash table.</Answer>

  4. [X] Given a set of integer dots (like (1,5)), how can you find a pair that has an integer 
         mid-point? For example, (1,1) and (3,3) have an integer mid-point of (2,2), 
         while (1,1) and (3,2) do not. Tell the complexity of your code. What if the dots 
         are N-dimensional?
        
         <Answer>
         We have {even-even, even-odd, odd-odd, odd-even} cases, check the first 5 elements 
         of the input(assuming no duplicates). It is guaranteed that at least one pair of 
         qualified points can be found. 

         For N-dimensional points, we have to check $2^n + 1$ elements using our method. However,
         we can compare every 2-pair points. It takes O(n) time to check a pair and we have 2Cm
         pairs where m is the number of points. That makes a running time of $O(n*m^2)$.
         </Answer>
  5. [X] Find first unique number in an unsorted array of 32 bit numbers without using 
         hash tables or array of counters.
        
         <Answer>
         1) Hash table or array of counters: count all the numbers and return the first element that is not in the hash table or array.
         2) Sort the array, O(nlgn); Iterate the original array and return the first unique element.  O(nlgn) time and O(n) space. 
         </Answer>
  6. [X] There is a large data file with 10 digit numbers. You are allowed to use only 20 megabytes of memory. How would you sort them?

         <Answer>
         1) External sort. First sort every 20Mb data(5 million integers) using radix sort then merge them.
        
         2) External sort:[fn:1] One-pass or two-pass will work.

         </Answer>
  7. [X] Find the longest repeating character in a sorted string[fn:2]
  8. [X] Player turns are stored in an array like so [1,2,1,2,1,2,1,2]. Make it so that player 1 finishes first and then player 2. i.e [1,1,1,1,2,2,2,2] [fn:3]
         Notes: I didn't get this. lol
  9. [X] An array contains the following elements [9,6,-3,1,7] and a value is equal to 4. Find a pair of numbers in the array that equal the sum. [fn:4]
         2-sum? Easy!
  10. [X] How do you implement stack in STL? What is the complexity? [fn:5]
          Linkedlist is enough as we can push/pop at the head of linkedlist. But there is no such thing like Linkedlist in c++ STL!
          <Answer>
          vector would work. 
          #+begin_example
          vector::push_back  => push  =>  constant time if no allocation happens
          vector::pop_back   => pop   =>  constant time
          vector::back()     => top   =>  constant time
          #+end_example
          </Answer>
  11. [X] I have 5 arrays with integer elements. I want to find the common elements in all 5 arrays. What is the logic? [fn:6]
          <Answer>
          Use one hash table, i.e., unordered_map in C++. Iterate the original 5 arrays. For ith array, maximum count for each element is i. When we are iterating
          2-5th array, ignore the elements that are not in the hash table. Finally, return all elements in the hash table with count equals to 5.

          O(n) time and O(n) space.
          </Answer>
  12. [X] What is smart pointer? How do you implement? What happens with the following: p2 = p1; 
          What happens P3(p1) (copy const)?
          #+begin_example
          #include <iostream>

          template <class T>
          class SmartPointer{
              int* ref;
              T* pointer;

          public:
              SmartPointer(T* object);
              SmartPointer(SmartPointer<T>& sp);

              SmartPointer<T>& operator=(SmartPointer<T>& sp);
              ~SmartPointer();
          };

          template <class T>
          SmartPointer(T* object)
          {
              ref = new int;
              *ref = 1;

              pointer = object;
          }


          template <class T>
          Pointer::~SmartPointer()
          {
              if(*ref > 0) --(*ref);

              if(*ref == 0 && nullptr != pointer) 
              {
                  delete pointer;
                  delete ref;
              }

              pointer = nullptr;
          }
          #+end_example
  13. [ ] Picture a restaurant kitchen with tickets of customer’s orders which has a start time, end time of when the order was completed, and price. How would you find the longest 
          contiguous time that tickets were processed within a given day? [fn:7]
          
          <Answer>
          1) We can do it in O(n), since there is only 24*2600, (i.e., 62400), seconds in a day. Create vector<bool> time(62400, false) for a day. 
             Mark it's slot with true or false based on the order list; Iterate time to get the longest contiguous time; (Maybe not perfect!)
          2) [ ]

          </Answer>
  14. [ ] Websites like Pandora recommend music based on user preferences. What kind of information would you need in such a design? [fn:8]
  15. [X] Given an integer, print out all the prime numbers smaller than that integer. [fn:9]
          #+begin_example
          #include <iostream>
          #include <vector>
          #include <cstdlib>

          using namespace std;

          void printPrimes(int n)
          {
              if(n <= 1) return;

              vector<bool> num(n+1, true);
              num[0] = false; // 0 is not prime
              num[1] = false; // 1 is not prime

              int first = 2;
              for(int first=2; first<=n; first++)
              {
                  // if first is prime
                  if(num[first])
                  {
                      for(int i=first+1; i<=n; i++)
                      {
                          if(i % first == 0) 
                              num[i] = false;
                      }
                  }
              }

              // print
              for(int i =0; i<=n; i++)
              {
                  if(num[i]) cout << i << " ";
              }

              cout << endl;
          }

          int main(int argc, char *argv[])
          {
              int x = atoi(argv[1]);

              printPrimes(x);

              return 0;
          }

          #+end_example
  16. [X] Given a binary tree, find out the maximum sum of value from root to each leaf. [fn:10]
          #+begin_example
          find_Max(Node *root){
              if (root==null)
                  return 0;
              else
                  return max((find_Max(root->left), find_Max(root->right))+root->value;
          }
          #+end_example
  17. [X] Find the largest k numbers in an enormous array of numbers. You cannot sort the array. Give the run time of the algorithm. [fn:11]

          Top k, use min-heap should be sufficient. 
  18. [X] Given an integer N, print numbers from 1 to N in lexicographic order. [fn:12]
          Details: To be implemented without using character conversion (or Strings). 

          Example: 
          N = 25 

          Print: 
          1 
          10 
          11 
          .. 
          19 
          2 
          20 
          21 
          .. 
          25 
          3 
          4 
          5 
          6 
          7 
          8 
          9 
          #+begin_example
              #include <iostream>
              using namespace std;

              void Test(int N, int k) 
              { 
                  if (k > N) {return;} 

                  for(int j = 0; j<10; j++) 
                  { 
                      if (k <= N) 
                      { 
                          cout<<k<<endl; 

                          k *= 10; 

                          Test(N, k); 

                          k /= 10; 
                          k++; 
                          if (k%10 == 0) return; 
                      } 
                  } 
              } 

              int main(int argc, char *argv[])
              {
                  Test(25, 1);
                  return 0;
              }
          #+end_example
  19. [X] What are virtual constructors and virtual destructors? [fn:13]
          
          It seems that there is no virtual constructors. Virtual destructors can deconstruct memory allocated by parrent/base class correctly.
  20. [X] In code there is a breakpoint at the first line of main function. The program is executed but it crashes without touching the breakpoint. Is there any code that is executed 
          before main itself. [fn:14]
          #+begin_example
          int funky()
          {
              return *( (int*)0 );
          }
          
          int c = funky();
          
          int main()
          {
              return 0;
          }
          #+end_example
  21. [X] Given historical data for the stocks of a company for say 8 day. you can buy and sell the stocks just once. Find the maximum profit you can make: [fn:15]
          |-----+---+---+---+---+---+---+---+---|
          | Day | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 |
          |-----+---+---+---+---+---+---+---+---|
          | N/A | 5 | 9 | 6 | 2 | 4 | 8 | 3 | 1 |
          |-----+---+---+---+---+---+---+---+---|

          Easy question.
          #+begin_example
          #include <iostream>
          #include <map>
          #include <limits>
          #include <vector>

          using namespace std;

          int max_profit(vector<int>& input)
          {
              int min = numeric_limits<int>::max();
              int profit = 0;
    
              for(const auto e: input)
              {
                  if(e < min)
                  min = e;

                  if(e - min > profit) 
                  profit = e - min;
              }

              return profit;
          }

          int main(int argc, char *argv[])
          {
              vector<int> stocks = {5, 9, 6, 2, 4, 8, 3, 1};

              cout << max_profit(stocks) << endl;
              return 0;
          }

          // compile with: g++ -std=c++11  FILE_NAME
          #+end_example
  22. [X] Given a string 'aabbcdccefff', find the first Non-duplicate character i.e. 'd'. [fn:16]
          
          It's Trivial if we can use hash table.
  23. [X] Q: If you have all the companies that are traded, and live inputs are coming of which company is being traded and what is the volume, how do you maintain the data, so that 
          you can carry out operation of giving the top 10 most traded companies by volume of shares most efficiently.  [fn:17]
          A: I juggled between Hash Map and Max Heap. I said Max Heap, since I can take out top 10 companies in a jiffy with a Max Heap. But then he asked you will need to find a company 
          everytime there is a trade, which will take quite some time in Heap. He pointed out that in real world scenario, number of trades happening, and hence searching of the company and 
          updating it, will be many times more than finding top 10. Which bought me to HashMap. Updations can happen in Real time, while finding top 10 can be done in O(n) or O(nlog(n)) time. 
          Even that wasn't optimal obviously. The interviewer was very nice and friendly type guy. He stressed that at every trade, at most, only 1 company will change in my top 10. This 
          hit me and got me to the correct answer that we keep all actual data in HashMap, but also maintain a MinHeap of 10 most traded company.
  24. [X] Q: If I give you a new book, and ask you to create the index which is found at the end of the book, how will you do it. [fn:18]
          A: I said for constant addition time of words (and page numbers) in the data structure, we can use Hashmap or TRIE. But 
          since output has to be in alphabetic order, we will use a Trie DS, where at the end of each word, we simple store a list of page numbers.

          What is [[http://en.wikipedia.org/wiki/Trie][Trie]]:
          #+begin_example
          In computer science, a trie, also called digital tree and sometimes radix tree or prefix tree (as they can be searched by prefixes), is an ordered tree data structure that is used 
          to store a dynamic set or associative array where the keys are usually strings. Unlike a binary search tree, no node in the tree stores the key associated with that node; 
          instead, its position in the tree defines the key with which it is associated. All the descendants of a node have a common prefix of the string associated with that node, and 
          the root is associated with the empty string. Values are normally not associated with every node, only with leaves and some inner nodes that correspond to keys of interest. For 
          the space-optimized presentation of prefix tree, see compact prefix tree.
          #+end_example
  25. [X] Q: The New operator...how does it work, what are the steps? [fn:19]
          A: I just said it creates a new memory in the heap and the reference points to it. He seemed satisfied.
          
          Note that it also does some other CONSTRUCT stuff!
  26. [X] Q: Do you know what is a Binary tree? How would you go about coding for addition of a new element to Binary tree? [fn:20]
          A: I asked if they want a Binary Tree or a BST? When he said BST I just said we can have a recursive function in which we pass the root of the tree and see if the value to be 
          added is smaller or bigger than the root, and depending on result, we go to left or right of the tree, assuming the left (or right) is not null. If null, just use new to create 
          a memory location, put the value, and use the left reference of the root to link to this new memory. Simple basic stuff.
  27. [X] Q: Do you know what is a stack? Explain [fn:21]
          A: Yes, explained LIFO push pop peek 
          Q: In stack, Push and Pop are constant. What will you do if you want an operation which gives the min of the stack also in constant time? 
          A: Question is straight out of Gayle's Book. You just maintain a new stack of minimum number till that point.
  28. [X] 3 Baskets, with label Apple Orange and Mixed. All the lables are incorrect. Pick up one fruit from one of the 3 baskets and find the correct labels for these 3 baskets.[fn:22]
  29. [X] How to find a missing value in an size N unsorted array (value from 0 to N but missing one of them). [fn:23]
          <Answer>
          1) n*(n-1)/2 - sum(input), but it might overflow
          2) XOR every elements in input and 0:N; return the result; this method can avoid overflow.
          </Answer>

* Question Set 2 [20/30]
  1. [X] Difference between C++ and Java [fn:24]
         
         Knowledge:
         1) c++ supports multiple inheritance, but java doesn't support directly. 
         2) Programmer responsible for memory management in C++, but JVM will take care of it by GC 
         3) C++ requires some code tweaks to run on different platforms, but java doesn't require any code changes due to byte code handled by JVM 
         4) C++ can communicate well with native libraries (kind of OS and drivers), but Java is not that efficient directly even though JNI is available. 
         5) Java is quite suitable for Web based applications compare to C++ 
         6) C++ is quite suitable for low level programming compare to 
         7) C++ supports call by value and call by reference, but java doesn't support call by reference, infact it is call by reference value.
  2. [X] Given a char array {1,234,34,54} 
         Modify the char array so that there is no comma in the most efficient way. We must get a char array {12343454} [fn:25]
  3. [X] Given an unsorted set of numbers from 1 to 10 with one number missing . 
         How to find the missing number in the set without sorting. How to find if two numbers are missing in the set? [fn:26]
  4. [X] Had a phone interview with Bloomberg. 
         Asked about my projects and my contribution to each of them. How to sort numbers between 1 and 10000. How will you sort if there are 10000 numbers between 1 and 50000. 
         Which sort do you prefer for linked list and array list. Again asked about my projects. Any questions? done with the phone interview. No Coding part. [fn:27]
  5. [X] In browsers caching of web links that a user clicks is done. 
         The recent url that user clicks on should come to the top of the list. 
         How to implement hash table for it? [fn:28]

         IMO: Same as LRU cache. 
         
  6. [X] Assume you daily prices of a stock 
         
         3 7 4 10 11 8 5 4 8 yadda yadda 
         You can only buy 1 share or sell 1 share a day, but you can only sell if you own the stock. You can't hold more than 1 share. write me an algo that finds me the 
         strategy that has the highest pay off. 
         Don't want the idea of generating all possible strategies and compare. [fn:29]
  7. [X] What is wrong, if anything, with the two implementations of populate. [fn:30]
         #+begin_example
          void populate(char **s);

          int main() {
                  char *s;
                  populate(&s);
                  printf("%s", s);	// should print "Prasad"
                  free(s);
                  return 0;
          }

          void populate(char **str) {
                  // 1. The next two lines is one implementation
                  *str = (char *)malloc(sizeof(char) * 7);
                  strcpy(*str, "Prasad");

                  // 2. This line seperately is another implementation
                  *str = "Prasad";
          }
         #+end_example

          Can not free s in the second implementation.
  8. [X] What are uses of Btree, AVL and RBtree(individual applications as I explained that we use them whenever we need balanced BST and he wasn't convinced) 
         When would you specifically use Btree over AVL tree. 
         Which one out of balanced BST is most efficient(for which i answered Btree for large values of n) and he asked why dont we always use Btree then? [fn:31]
         
         Notes:
         Binary Search trees do not need to be balanced, so depending on the order of insertions the tree can become unbalanced quickly and search times could potentially vary a lot. This is the
         most basic search tree, and inserts and deletes have very simple logic. 

         AVL trees are always at the optimal balance point, but can slow down inserts and deletes because they never allow that tree height to be outside the -1 to 1 range. But you will have 
         the fastest look times. 

         Red black trees are also self balancing but can become slightly imbalanced to improve insert and delete times, with a small potential hit to search times. 

         So if a system updates the tree often I would lean toward using a red black tree, and if the tree is updated very rarely then a AVL tree would be the better direction. 

         If the data will come in a "controlled manner" that we will not likely have a large imbalance than a BST could be an option but it would still be good to look at one of the 
         self balancing tree structures.
  9. [X] Design a phonebook dictionary which on input any characters gives names and phone number of all the matching names(prefix) [fn:32]

         For instance 
         Rihana 233222232 
         Ricky 134242444 
         Peter 224323423 
         Ron 988232323 

         If you give R as input it should list 
         Rihana Ricky and Ron with their contact numbers 

         If you give ri as input it should list 
         Rihana, Ricky with their contact numbers

         Trie or compact trie, i.e., radix tree.
  10. [ ] If have unlimited memory, how can we achieve concurrency between threads without using locks? [fn:33]
  11. [X] Find max depth of a binary tree [fn:34]
  12. [X] Disadvantages of locks? What is Deadlock? What is Starvation? [fn:35]
          
          Notes:
          1) It decrease the performance since threads have to acquire and release locks;
          2) It may cause Deadlock;
          3) It may cause starvation;
  13. [ ] How would a mutex lock be implemented by the system? [fn:36]
  14. [ ] How is mutual exclusion done in C++? [fn:37]
  15. [ ] How would you implement Garbage Collection in C++? [fn:38]
  16. [ ] A solution takes 8 hours to do n independent jobs. What will you do to improvise?  [fn:39]
          Follow up: Improvise on a single processor 
          Follow up: If N task work uses shared memory
  17. [X] How to design Hash map using array. [fn:40]
  18. [X] Design a database for storing record of students. [fn:41]
  19. [X] Develop and algorithm to reverse a string keeping words intact. [fn:42]
          Example: This is a question 
          result should be: question a is This

          Notes:
          1) Use stack
          2) Do it in place
  20. [X] Develop an Algorithm to implement queue using stack [fn:43]
          
          Notes:
          Use too stacks, easy!
  21. [ ] a. How does OS detects a device on boot up, how does it gets to know whether it is working or faulty? 
          b. How does the device driver initialize this device (initialization, registration etc)? [fn:44]
  22. [X] What is *pass by value* and *pass by reference*? [fn:45]
          a. Can a structure/class be passed by value? => Yes. Copy all the internal data.
          b. Can an array be passed by value?    => Yes. But we need to copy all the data with high overhead. 
  23. [ ] How will you implement a T9 dictionary? (requiring only 1 look up, no partial searches meaning one keys in a 
          name and then presses go to find it) [fn:46]
  24. [X] How will you tell whether a given number is a palindrome? [fn:47]

          Edit: The question was for a string actually.
          #+begin_example
          // Solution without using extra space
          class Solution {
          public:
              bool isPalindrome(int x) {
                  // Note: The Solution object is instantiated only once and is reused by each test case.
                  // was based on wrong assumption, -1 is not palindromes

                  // from both ends

                  if(x < 0) return false;

                  int div = 1;
                  while(x / div >= 10) div *= 10;

                  while(x != 0)
                  {
                      int l = x / div;
                      int r = x % 10;

                      if(l != r) return false;
                      x = (x % div) / 10;

                      div /= 100;
                  }

                  return true;
              }
          };
          #+end_example
          
          Yet another recursive solution.
          #+begin_example
          class Solution {
          public:
              bool isPalindrome(int x) {
                  // Note: The Solution object is instantiated only once and is reused by each test case.
                  // was based on wrong assumption, -1 is not palindromes
                  return isPalindrome(x, x);
              }

              bool isPalindrome(int x, int& y)
              {
                  if(x < 0) return false;
                  if(x == 0) return true;

                  if(!isPalindrome(x/10, y) || (x % 10 != y % 10)) 
                      return false;

                  y /= 10;
                  return true;
              }
          };
          #+end_example
  25. [X] How will you reverse a given number? (not using "/", "&" operators) [fn:48]
          
          For eg 756 - > 657

          Notes: But we can use "+", "*" and "-". Here is one example:
          #+begin_example
          #include <iostream>
          #include <cstdlib>
          #include <climits>


          using namespace std;

          class Solution {
          public:

              /** 
               * Reverse positive integer
               * 
               * @param x integer
               * 
               * @return reversed integer
               */
              int reverse(int x) {
                  // Note: The Solution object is instantiated only once and is reused by each test case.
                  int result = 0, prev_base = 1, base = 10;
                  while(x >= prev_base)
                  {
                      // extract last digit
                      int ld = x % base, d = 0;
                      while(ld >= 0)
                      {
                          d++;
                          ld -= prev_base;
                      }

                      d--;

                      // bound checking
                      if(result > 0 && result > (INT_MAX - d)/10) return INT_MAX;
                      if(result < 0 && result < (INT_MIN - d)/10) return INT_MIN;

                      // done
                      result = result*10 + d;

                      prev_base = base;
                      base *= 10;
                  }

                  return result;
              }
          };

          int main(int argc, char *argv[])
          {
              Solution slt;

              cout << slt.reverse(atoi(argv[1])) << endl;
              return 0;
          }
          #+end_example
  26. [X] How many sockets can you have? [fn:49]
          
          => A process can open as many sockets as allowable file descriptors which is configured at os configuration.

          what will a server do after getting a request from a client?
  27. [ ] multicast VS broadcast [fn:50]
  28. [ ] Implement a deque. [fn:51]
  29. [ ] Write atoi() function. [fn:52]
  30. [X] what is bus error? common causes of bus errors? [fn:53]
          
          Possible answers:
          1) Bus Error is when you try to access a memory location using a pointer that isn't aligned properly.
          2) Hardware problems
          
* Other Questions [0/6]
  - [ ] Least commond ancestor
  - [ ] All sorting algorithms
  - [ ] Concurrency, multithreads, system.
  - [ ] cc150
  - [ ] leetcode
  - [ ] design
* Footnotes

[fn:1] http://en.wikipedia.org/wiki/External_sorting

[fn:2] http://www.careercup.com/question?id=5680360385937408

[fn:3] http://www.careercup.com/question?id=6298005405696000

[fn:4] http://www.careercup.com/question?id=6251207442038784

[fn:5] http://www.careercup.com/question?id=5070965260156928

[fn:6] http://www.careercup.com/question?id=6545930346037248

[fn:7] http://www.careercup.com/question?id=6338884266885120

[fn:8] http://www.careercup.com/question?id=5707438493794304

[fn:9] http://www.careercup.com/question?id=5696692485619712

[fn:10] http://www.careercup.com/question?id=4921930381524992

[fn:11] http://www.careercup.com/question?id=6033455032827904

[fn:12] http://www.careercup.com/question?id=6185570560638976

[fn:13] http://www.careercup.com/question?id=5129303884824576

[fn:14] http://www.careercup.com/question?id=5143391377555456

[fn:15] http://www.careercup.com/question?id=5541234735054848

[fn:16] http://www.careercup.com/question?id=5168873418522624

[fn:17] http://www.careercup.com/question?id=17543678

[fn:18] http://www.careercup.com/question?id=17425672

[fn:19] http://www.careercup.com/question?id=17380675

[fn:20] http://www.careercup.com/question?id=17544673

[fn:21] http://www.careercup.com/question?id=17215679

[fn:22] http://www.careercup.com/question?id=16585677

[fn:23] http://www.careercup.com/question?id=16594681

[fn:24] http://www.careercup.com/question?id=16586686

[fn:25] http://www.careercup.com/question?id=16234739

[fn:26] http://www.careercup.com/question?id=16171686

[fn:27] http://www.careercup.com/question?id=16049683

[fn:28] http://www.careercup.com/question?id=16251663

[fn:29] http://www.careercup.com/question?id=15856707

[fn:30] http://www.careercup.com/question?id=15419803

[fn:31] http://www.careercup.com/question?id=15434773

[fn:32] http://www.careercup.com/question?id=15423772

[fn:33] http://www.careercup.com/question?id=15432683

[fn:34] http://www.careercup.com/question?id=15419690

[fn:35] http://www.careercup.com/question?id=15432682

[fn:36] http://www.careercup.com/question?id=15434681

[fn:37] http://www.careercup.com/question?id=15416685

[fn:38] http://www.careercup.com/question?id=15421683

[fn:39] http://www.careercup.com/question?id=15287664

[fn:40] http://www.careercup.com/question?id=15192942

[fn:41] http://www.careercup.com/question?id=15289779

[fn:42] http://www.careercup.com/question?id=15304663

[fn:43] http://www.careercup.com/question?id=15294784

[fn:44] http://www.careercup.com/question?id=15258753

[fn:45] http://www.careercup.com/question?id=15259770

[fn:46] http://www.careercup.com/question?id=15206845

[fn:47] http://www.careercup.com/question?id=15206843

[fn:48] http://www.careercup.com/question?id=15258752

[fn:49] http://www.careercup.com/question?id=13870766

[fn:50] http://www.careercup.com/question?id=13874753

[fn:51] http://www.careercup.com/question?id=13872745

[fn:52] http://www.careercup.com/question?id=13874752

[fn:53] http://www.careercup.com/question?id=13871739
